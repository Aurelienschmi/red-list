<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Information sur les pays</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="/index.css" />
</head>
<body>
    <div class="search-container">
        <input 
            type="text" 
            list="countries-list" 
            id="country-search" 
            placeholder="Rechercher un pays..." 
            autocomplete="off"
            maxlength="100">
        <datalist id="countries-list">
            <% countries.forEach(country => { %>
                <option value="<%= country.name.common %>" data-id="<%= country.cca2 %>"></option>
            <% }); %>
        </datalist>
        <br>
        <button id="validate-btn" disabled>Valider</button>
        <div id="error" class="error">Veuillez sélectionner un pays valide.</div>
    </div>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const countries = <%- JSON.stringify(countries) %>;
        const searchInput = document.getElementById("country-search");
        const validateBtn = document.getElementById("validate-btn");
        const errorDiv = document.getElementById("error");

        // Initialize the map
        const map = L.map('map').setView([20, 0], 2);

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Add country markers
        countries.forEach(country => {
            if (country.latlng) {
                const marker = L.marker(country.latlng).addTo(map);
                marker.bindPopup(`<b>${country.name.common}</b><br><button onclick="window.location.href='/country/${country.cca2}'">Voir les espèces menacées</button>`);
            }
        });

        // Validate country input
        searchInput.addEventListener('input', () => {
            const isValidCountry = countries.some(country => country.name.common === searchInput.value);
            validateBtn.disabled = !isValidCountry;
            errorDiv.style.display = isValidCountry ? 'none' : 'block';
        });

        // Handle validate button click
        validateBtn.addEventListener('click', () => {
            const selectedCountry = countries.find(country => country.name.common === searchInput.value);
            if (selectedCountry) {
                window.location.href = `/country/${selectedCountry.cca2}`;
            }
        });
    </script>
</body>
</html>